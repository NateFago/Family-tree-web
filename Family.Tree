import { useState } from "react";
import { Tree, TreeNode } from "react-organizational-chart";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent } from "@/components/ui/card";
import { Home, Settings, Network, MessageCircle, Sun, Moon, User, Mail, Bell, Trash2, PlusCircle, ThumbsUp, Heart, Laugh, Sad, Angry, Check } from "lucide-react";

const ADMIN_USERS = ["nathanielfagolmwai@gmail.com", "18082296845", "admin2", "admin3", "admin4", "admin5"];
const REACTIONS = { like: "👍", love: "❤️", haha: "😂", sad: "😢", angry: "😡" };

export default function FamilyTreeApp() {
  const [family, setFamily] = useState({
    name: "Root Person",
    children: [],
    info: { birthday: "", dateOfDeath: "", story: "" },
  });
  const [newMember, setNewMember] = useState("");
  const [selectedPerson, setSelectedPerson] = useState(null);
  const [username, setUsername] = useState("");
  const [displayName, setDisplayName] = useState("");
  const [isAdmin, setIsAdmin] = useState(false);
  const [darkMode, setDarkMode] = useState(false);
  const [showSettings, setShowSettings] = useState(false);
  const [notifications, setNotifications] = useState(0);
  const [posts, setPosts] = useState([]);
  const [userType, setUserType] = useState("user");

  const handleLogin = () => {
    if (username) {
      setIsAdmin(userType === "admin" && ADMIN_USERS.includes(username));
      if (username === "nathanielfagolmwai@gmail.com" || username === "18082296845") {
        setDisplayName("Nathaniel Fagolmwai");
      }
    }
  };

  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
  };

  const addPost = (text) => {
    if (!username || !displayName || !text) return;
    setPosts([{ id: posts.length, user: displayName, text, reactions: {} }, ...posts]);
  };

  const reactToPost = (postId, reaction) => {
    setPosts(posts.map(post =>
      post.id === postId ? { ...post, reactions: { ...post.reactions, [reaction]: (post.reactions[reaction] || 0) + 1 } } : post
    ));
  };

  return (
    <div className={`p-4 ${darkMode ? 'bg-gray-900 text-white' : 'bg-white text-black'}`}>
      <div className="flex justify-between items-center">
        <h1 className="text-xl font-bold">{isAdmin ? "Admin Family Tree" : "Family Tree"}</h1>
        <button className="relative">
          <Bell size={24} />
          {notifications > 0 && (
            <span className="absolute top-0 right-0 bg-red-500 text-white text-xs px-2 rounded-full">
              {notifications}
            </span>
          )}
        </button>
      </div>
      <div className="flex flex-col gap-2 mt-4">
        <h2 className="text-lg font-semibold">Login as:</h2>
        <div className="flex gap-4">
          <Button variant={userType === "user" ? "default" : "outline"} onClick={() => setUserType("user")}>
            User
          </Button>
          <Button variant={userType === "admin" ? "default" : "outline"} onClick={() => setUserType("admin")}>
            Admin
          </Button>
        </div>
        <Input value={username} onChange={(e) => setUsername(e.target.value)} placeholder="Enter Email or Phone Number" />
        {username && username !== "nathanielfagolmwai@gmail.com" && username !== "18082296845" && (
          <Input value={displayName} onChange={(e) => setDisplayName(e.target.value)} placeholder="Enter Display Name" />
        )}
        <Button onClick={handleLogin}>Login</Button>
      </div>
      <div className="mt-4 h-96 overflow-auto border p-4">
        {posts.map(post => (
          <Card key={post.id} className="p-4 mb-2">
            <p>
              <strong>{post.user}</strong>
              {post.user === "Nathaniel Fagolmwai" ? (
                <Check size={16} className="inline ml-1 text-yellow-500" />
              ) : ADMIN_USERS.includes(post.user) ? (
                <Check size={16} className="inline ml-1 text-blue-500" />
              ) : null}
              : {post.text}
            </p>
            <div className="flex space-x-2 mt-2">
              {Object.entries(REACTIONS).map(([key, icon]) => (
                <button key={key} onClick={() => reactToPost(post.id, key)}>{icon} {post.reactions[key] || 0}</button>
              ))}
            </div>
          </Card>
        ))}
      </div>
      <div className="fixed bottom-0 w-full flex justify-around bg-gray-100 p-4 border-t">
        <button><Home size={24} /></button>
        <button><Network size={24} /></button>
        <button><MessageCircle size={24} /></button>
        <button><Mail size={24} /></button>
        <button onClick={() => setShowSettings(!showSettings)}><Settings size={24} /></button>
      </div>
    </div>
  );
}
